{"paragraphs":[{"text":"%md\n\nMulti-purpose Notebook\n\nThe Notebook is the place for all your needs\n\n    Data Ingestion\n    Data Discovery\n    Data Analytics\n    Data Visualization & Collaboration\n\n\n","user":"anonymous","dateUpdated":"2020-06-17T10:26:52+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592389356066_-374153991","id":"20200521-101945_941341710","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T10:26:52+0000","dateFinished":"2020-06-17T10:26:56+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:17273"},{"title":"Scala Version","text":"%spark\n\nutil.Properties.versionString","user":"anonymous","dateUpdated":"2020-06-17T11:22:13+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nres3: String = version 2.11.8\n"}]},"apps":[],"jobName":"paragraph_1592389356070_-375692987","id":"20200615-143242_98049875","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T11:22:13+0000","dateFinished":"2020-06-17T11:22:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17274"},{"title":"Spark Version","text":"%spark\n\nsc.version","user":"anonymous","dateUpdated":"2020-06-17T11:22:22+0000","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nres4: String = 2.1.0\n"}]},"apps":[],"jobName":"paragraph_1592389356071_-376077736","id":"20200615-143525_1010719312","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T11:22:22+0000","dateFinished":"2020-06-17T11:22:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17275"},{"title":"Difference between val and var","text":"%md\n\n    val is constant value and not mutable\n    var is variable and mutable","user":"anonymous","dateUpdated":"2020-06-17T11:22:28+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>val is constant value and not mutable<br/> var is variable and mutable</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1592389356072_-378001480","id":"20200612-112522_1421060253","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T11:22:28+0000","dateFinished":"2020-06-17T11:22:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17276"},{"title":"Scala - Loading RDD files","text":"%spark\n\n//Read Input from Text File (5GB) .. can be downloaded from the link given below\n//https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/HG7NV7 \n\nvar rdd = sc.textFile(\"file:///downloads/Data/\")","user":"anonymous","dateUpdated":"2020-06-18T09:40:01+0000","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nrdd: org.apache.spark.rdd.RDD[String] = file:///downloads/Data/ MapPartitionsRDD[110] at textFile at <console>:30\n"}]},"apps":[],"jobName":"paragraph_1592389356072_-378001480","id":"20200513-143454_934792498","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-18T09:40:01+0000","dateFinished":"2020-06-18T09:40:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17277"},{"text":"%spark\n\nval header = rdd.first()","user":"anonymous","dateUpdated":"2020-06-17T15:52:48+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nheader: String = Year,Month,DayofMonth,DayOfWeek,DepTime,CRSDepTime,ArrTime,CRSArrTime,UniqueCarrier,FlightNum,TailNum,ActualElapsedTime,CRSElapsedTime,AirTime,ArrDelay,DepDelay,Origin,Dest,Distance,TaxiIn,TaxiOut,Cancelled,CancellationCode,Diverted,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay\n"}]},"apps":[],"jobName":"paragraph_1592389356073_-378386229","id":"20200610-110152_417747058","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T15:52:48+0000","dateFinished":"2020-06-17T15:52:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17278"},{"text":"%spark\n\nrdd = rdd.filter(row => row != header)","user":"anonymous","dateUpdated":"2020-06-17T15:52:35+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nrdd: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[22] at filter at <console>:31\n"}]},"apps":[],"jobName":"paragraph_1592389356074_-377231982","id":"20200610-110209_1185792491","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T15:52:36+0000","dateFinished":"2020-06-17T15:52:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17279"},{"text":"%spark\n\n//Prints no. of rows\nrdd.count()\n\n//Prints first 10 rows\nrdd.take(10).foreach(println)","user":"anonymous","dateUpdated":"2020-06-17T15:52:55+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nres21: Long = 47925074\nYear,Month,DayofMonth,DayOfWeek,DepTime,CRSDepTime,ArrTime,CRSArrTime,UniqueCarrier,FlightNum,TailNum,ActualElapsedTime,CRSElapsedTime,AirTime,ArrDelay,DepDelay,Origin,Dest,Distance,TaxiIn,TaxiOut,Cancelled,CancellationCode,Diverted,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay\n1987,10,14,3,741,730,912,849,PS,1451,NA,91,79,NA,23,11,SAN,SFO,447,NA,NA,0,NA,0,NA,NA,NA,NA,NA\n1987,10,15,4,729,730,903,849,PS,1451,NA,94,79,NA,14,-1,SAN,SFO,447,NA,NA,0,NA,0,NA,NA,NA,NA,NA\n1987,10,17,6,741,730,918,849,PS,1451,NA,97,79,NA,29,11,SAN,SFO,447,NA,NA,0,NA,0,NA,NA,NA,NA,NA\n1987,10,18,7,729,730,847,849,PS,1451,NA,78,79,NA,-2,-1,SAN,SFO,447,NA,NA,0,NA,0,NA,NA,NA,NA,NA\n1987,10,19,1,749,730,922,849,PS,1451,NA,93,79,NA,33,19,SAN,SFO,447,NA,NA,0,NA,0,NA,NA,NA,NA,NA\n1987,10,21,3,728,730,848,849,PS,1451,NA,80,79,NA,-1,-2,SAN,SFO,447,NA,NA,0,NA,0,NA,NA,NA,NA,NA\n1987,10,22,4,728,730,852,849,PS,1451,NA,84,79,NA,3,-2,SAN,SFO,447,NA,NA,0,NA,0,NA,NA,NA,NA,NA\n1987,10,23,5,731,730,902,849,PS,1451,NA,91,79,NA,13,1,SAN,SFO,447,NA,NA,0,NA,0,NA,NA,NA,NA,NA\n1987,10,24,6,744,730,908,849,PS,1451,NA,84,79,NA,19,14,SAN,SFO,447,NA,NA,0,NA,0,NA,NA,NA,NA,NA\n"}]},"apps":[],"jobName":"paragraph_1592389356075_-377616731","id":"20200610-110419_243986338","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T15:52:56+0000","dateFinished":"2020-06-17T15:54:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17280"},{"title":"Scala - Setting up schema for loaded RDD files","text":"%spark\n\n// One method for defining the schema of an RDD is to make a case class with the desired column names and types.\ncase class Flight(Year: String, Month: String, DayofMonth: String, DayOfWeek: String, DepTime: String, CRSDepTime: String, ArrTime: String, CRSArrTime: String, UniqueCarrier: String, FlightNum: String, TailNum: String, ActualElapsedTime: String, CRSElapsedTime: String, AirTime: String, ArrDelay: String, DepDelay: String, Origin: String, Dest: String, Distance: String, TaxiIn: String, TaxiOut: String, Cancelled: String, CancellationCode: String, Diverted: String, CarrierDelay: String, WeatherDelay: String, NASDelay: String, SecurityDelay: String, LateAircraftDelay: String)\n\nvar new_rdd = rdd.map(_.split(\",\")).map(p => Flight(p(0), p(1), p(2), p(3), p(4), p(5), p(6), p(7), p(8), p(9), p(10), p(11), p(12), p(13), p(14), p(15), p(16), p(17), p(18), p(19), p(20), p(21), p(22), p(23), p(24), p(25), p(26), p(27), p(28)))\n\n// Any RDD containing case classes can be registered as a table.  The schema of the table is automatically inferred using scala reflection.\nvar scala_df = new_rdd.toDF()\n\nscala_df.createOrReplaceTempView(\"scala_flight\") // 'scala_flight' table can be accessed by any language within zeppelin.\n\nscala_df.printSchema()","user":"anonymous","dateUpdated":"2020-06-17T15:54:48+0000","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndefined class Flight\n\nnew_rdd: org.apache.spark.rdd.RDD[Flight] = MapPartitionsRDD[26] at map at <console>:32\n\nscala_df: org.apache.spark.sql.DataFrame = [Year: string, Month: string ... 27 more fields]\nroot\n |-- Year: string (nullable = true)\n |-- Month: string (nullable = true)\n |-- DayofMonth: string (nullable = true)\n |-- DayOfWeek: string (nullable = true)\n |-- DepTime: string (nullable = true)\n |-- CRSDepTime: string (nullable = true)\n |-- ArrTime: string (nullable = true)\n |-- CRSArrTime: string (nullable = true)\n |-- UniqueCarrier: string (nullable = true)\n |-- FlightNum: string (nullable = true)\n |-- TailNum: string (nullable = true)\n |-- ActualElapsedTime: string (nullable = true)\n |-- CRSElapsedTime: string (nullable = true)\n |-- AirTime: string (nullable = true)\n |-- ArrDelay: string (nullable = true)\n |-- DepDelay: string (nullable = true)\n |-- Origin: string (nullable = true)\n |-- Dest: string (nullable = true)\n |-- Distance: string (nullable = true)\n |-- TaxiIn: string (nullable = true)\n |-- TaxiOut: string (nullable = true)\n |-- Cancelled: string (nullable = true)\n |-- CancellationCode: string (nullable = true)\n |-- Diverted: string (nullable = true)\n |-- CarrierDelay: string (nullable = true)\n |-- WeatherDelay: string (nullable = true)\n |-- NASDelay: string (nullable = true)\n |-- SecurityDelay: string (nullable = true)\n |-- LateAircraftDelay: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1592389356075_-377616731","id":"20200610-114052_289104237","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T15:54:49+0000","dateFinished":"2020-06-17T15:54:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17281"},{"text":"%spark\n\nval FlightSQL = sqlContext.sql(\"SELECT * FROM scala_flight LIMIT 5\")","user":"anonymous","dateUpdated":"2020-06-17T15:55:04+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nFlightSQL: org.apache.spark.sql.DataFrame = [Year: string, Month: string ... 27 more fields]\n"}]},"apps":[],"jobName":"paragraph_1592389356076_-379540476","id":"20200610-105356_145791790","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T15:55:04+0000","dateFinished":"2020-06-17T15:55:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17282"},{"text":"%spark\n\nFlightSQL.show()","user":"anonymous","dateUpdated":"2020-06-17T15:55:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+-----+----------+---------+-------+----------+-------+----------+-------------+---------+-------+-----------------+--------------+-------+--------+--------+------+----+--------+------+-------+---------+----------------+--------+------------+------------+--------+-------------+-----------------+\n|Year|Month|DayofMonth|DayOfWeek|DepTime|CRSDepTime|ArrTime|CRSArrTime|UniqueCarrier|FlightNum|TailNum|ActualElapsedTime|CRSElapsedTime|AirTime|ArrDelay|DepDelay|Origin|Dest|Distance|TaxiIn|TaxiOut|Cancelled|CancellationCode|Diverted|CarrierDelay|WeatherDelay|NASDelay|SecurityDelay|LateAircraftDelay|\n+----+-----+----------+---------+-------+----------+-------+----------+-------------+---------+-------+-----------------+--------------+-------+--------+--------+------+----+--------+------+-------+---------+----------------+--------+------------+------------+--------+-------------+-----------------+\n|Year|Month|DayofMonth|DayOfWeek|DepTime|CRSDepTime|ArrTime|CRSArrTime|UniqueCarrier|FlightNum|TailNum|ActualElapsedTime|CRSElapsedTime|AirTime|ArrDelay|DepDelay|Origin|Dest|Distance|TaxiIn|TaxiOut|Cancelled|CancellationCode|Diverted|CarrierDelay|WeatherDelay|NASDelay|SecurityDelay|LateAircraftDelay|\n|1987|   10|        14|        3|    741|       730|    912|       849|           PS|     1451|     NA|               91|            79|     NA|      23|      11|   SAN| SFO|     447|    NA|     NA|        0|              NA|       0|          NA|          NA|      NA|           NA|               NA|\n|1987|   10|        15|        4|    729|       730|    903|       849|           PS|     1451|     NA|               94|            79|     NA|      14|      -1|   SAN| SFO|     447|    NA|     NA|        0|              NA|       0|          NA|          NA|      NA|           NA|               NA|\n|1987|   10|        17|        6|    741|       730|    918|       849|           PS|     1451|     NA|               97|            79|     NA|      29|      11|   SAN| SFO|     447|    NA|     NA|        0|              NA|       0|          NA|          NA|      NA|           NA|               NA|\n|1987|   10|        18|        7|    729|       730|    847|       849|           PS|     1451|     NA|               78|            79|     NA|      -2|      -1|   SAN| SFO|     447|    NA|     NA|        0|              NA|       0|          NA|          NA|      NA|           NA|               NA|\n+----+-----+----------+---------+-------+----------+-------+----------+-------------+---------+-------+-----------------+--------------+-------+--------+--------+------+----+--------+------+-------+---------+----------------+--------+------------+------------+--------+-------------+-----------------+\n\n"}]},"apps":[],"jobName":"paragraph_1592389356076_-379540476","id":"20200521-103431_1150502552","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T15:55:17+0000","dateFinished":"2020-06-17T15:55:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17283"},{"title":" You can put some objects using Scala (in an Apache Spark cell) and read it from Python, and vice versa","text":"%spark\n\nz.put(\"scala_df\", scala_df) // z is zeppelin object","user":"anonymous","dateUpdated":"2020-06-17T15:55:23+0000","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1592389356077_-379925225","id":"20200603-140858_132786735","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T15:55:23+0000","dateFinished":"2020-06-17T15:55:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17284"},{"title":"Python Version","text":"%pyspark\n\nimport sys\nprint(sys.version)","user":"anonymous","dateUpdated":"2020-06-17T15:55:35+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"2.7.13 |Continuum Analytics, Inc.| (default, Dec 20 2016, 23:09:15) \n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)]\n"}]},"apps":[],"jobName":"paragraph_1592389356085_-370691251","id":"20200612-121820_1667836848","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T15:55:35+0000","dateFinished":"2020-06-17T15:55:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17285"},{"title":"Reading Data from Scala to Python using z.get( )","text":"%pyspark\n\n# One method of getting data from Scala is to use z.get()\nfrom pyspark.sql import SQLContext, DataFrame, Row\nsqlContext = SQLContext(sc)\n\npyspark_df = DataFrame(z.get(\"scala_df\"), sqlContext) #PySpark DataFrame\ntype(pyspark_df)","user":"anonymous","dateUpdated":"2020-06-17T15:56:36+0000","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<class 'pyspark.sql.dataframe.DataFrame'>\n"}]},"apps":[],"jobName":"paragraph_1592389356086_-369537004","id":"20200515-104408_1394652924","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T15:56:36+0000","dateFinished":"2020-06-17T15:56:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17286"},{"title":"Reading Data from Scala to Python by SQL","text":"%pyspark\n\npyspark_df = spark.sql(\"SELECT * FROM scala_flight LIMIT 10000\")  #retrieving 10,000 rows from 'scala_flight' table which is registered as TempView in Scala\ntype(pyspark_df)","user":"anonymous","dateUpdated":"2020-06-17T15:56:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<class 'pyspark.sql.dataframe.DataFrame'>\n"}]},"apps":[],"jobName":"paragraph_1592389356087_-369921753","id":"20200612-120504_2073602911","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T15:56:54+0000","dateFinished":"2020-06-17T15:56:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17287"},{"text":"%pyspark\n\n# Prints no. of rows read from Scala\npyspark_df.count()","user":"anonymous","dateUpdated":"2020-06-17T15:57:13+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"10000\n"}]},"apps":[],"jobName":"paragraph_1592389356089_-372230247","id":"20200605-120750_669510104","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T15:57:13+0000","dateFinished":"2020-06-17T15:57:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17288"},{"text":"%pyspark\n\n# Prints no. of rows in 'scala_flight' table using SQL\nspark.sql(\"SELECT COUNT(*) FROM scala_flight\").show() # Recall scala_flight is accessible by any language within zeppelin","user":"anonymous","dateUpdated":"2020-06-17T15:57:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------+\n|count(1)|\n+--------+\n|47925074|\n+--------+\n\n"}]},"apps":[],"jobName":"paragraph_1592389356091_-371460749","id":"20200612-114154_883959989","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T15:57:34+0000","dateFinished":"2020-06-17T16:02:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17289"},{"text":"%pyspark\n\npyspark_df.printSchema()","user":"anonymous","dateUpdated":"2020-06-17T16:04:27+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- Year: string (nullable = true)\n |-- Month: string (nullable = true)\n |-- DayofMonth: string (nullable = true)\n |-- DayOfWeek: string (nullable = true)\n |-- DepTime: string (nullable = true)\n |-- CRSDepTime: string (nullable = true)\n |-- ArrTime: string (nullable = true)\n |-- CRSArrTime: string (nullable = true)\n |-- UniqueCarrier: string (nullable = true)\n |-- FlightNum: string (nullable = true)\n |-- TailNum: string (nullable = true)\n |-- ActualElapsedTime: string (nullable = true)\n |-- CRSElapsedTime: string (nullable = true)\n |-- AirTime: string (nullable = true)\n |-- ArrDelay: string (nullable = true)\n |-- DepDelay: string (nullable = true)\n |-- Origin: string (nullable = true)\n |-- Dest: string (nullable = true)\n |-- Distance: string (nullable = true)\n |-- TaxiIn: string (nullable = true)\n |-- TaxiOut: string (nullable = true)\n |-- Cancelled: string (nullable = true)\n |-- CancellationCode: string (nullable = true)\n |-- Diverted: string (nullable = true)\n |-- CarrierDelay: string (nullable = true)\n |-- WeatherDelay: string (nullable = true)\n |-- NASDelay: string (nullable = true)\n |-- SecurityDelay: string (nullable = true)\n |-- LateAircraftDelay: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1592389356092_-373384493","id":"20200610-110910_1403424700","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T16:04:27+0000","dateFinished":"2020-06-17T16:04:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17290"},{"text":"%pyspark\n\npyspark_df.head(5)","user":"anonymous","dateUpdated":"2020-06-17T16:04:33+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[Row(Year=u'Year', Month=u'Month', DayofMonth=u'DayofMonth', DayOfWeek=u'DayOfWeek', DepTime=u'DepTime', CRSDepTime=u'CRSDepTime', ArrTime=u'ArrTime', CRSArrTime=u'CRSArrTime', UniqueCarrier=u'UniqueCarrier', FlightNum=u'FlightNum', TailNum=u'TailNum', ActualElapsedTime=u'ActualElapsedTime', CRSElapsedTime=u'CRSElapsedTime', AirTime=u'AirTime', ArrDelay=u'ArrDelay', DepDelay=u'DepDelay', Origin=u'Origin', Dest=u'Dest', Distance=u'Distance', TaxiIn=u'TaxiIn', TaxiOut=u'TaxiOut', Cancelled=u'Cancelled', CancellationCode=u'CancellationCode', Diverted=u'Diverted', CarrierDelay=u'CarrierDelay', WeatherDelay=u'WeatherDelay', NASDelay=u'NASDelay', SecurityDelay=u'SecurityDelay', LateAircraftDelay=u'LateAircraftDelay'), Row(Year=u'1987', Month=u'10', DayofMonth=u'14', DayOfWeek=u'3', DepTime=u'741', CRSDepTime=u'730', ArrTime=u'912', CRSArrTime=u'849', UniqueCarrier=u'PS', FlightNum=u'1451', TailNum=u'NA', ActualElapsedTime=u'91', CRSElapsedTime=u'79', AirTime=u'NA', ArrDelay=u'23', DepDelay=u'11', Origin=u'SAN', Dest=u'SFO', Distance=u'447', TaxiIn=u'NA', TaxiOut=u'NA', Cancelled=u'0', CancellationCode=u'NA', Diverted=u'0', CarrierDelay=u'NA', WeatherDelay=u'NA', NASDelay=u'NA', SecurityDelay=u'NA', LateAircraftDelay=u'NA'), Row(Year=u'1987', Month=u'10', DayofMonth=u'15', DayOfWeek=u'4', DepTime=u'729', CRSDepTime=u'730', ArrTime=u'903', CRSArrTime=u'849', UniqueCarrier=u'PS', FlightNum=u'1451', TailNum=u'NA', ActualElapsedTime=u'94', CRSElapsedTime=u'79', AirTime=u'NA', ArrDelay=u'14', DepDelay=u'-1', Origin=u'SAN', Dest=u'SFO', Distance=u'447', TaxiIn=u'NA', TaxiOut=u'NA', Cancelled=u'0', CancellationCode=u'NA', Diverted=u'0', CarrierDelay=u'NA', WeatherDelay=u'NA', NASDelay=u'NA', SecurityDelay=u'NA', LateAircraftDelay=u'NA'), Row(Year=u'1987', Month=u'10', DayofMonth=u'17', DayOfWeek=u'6', DepTime=u'741', CRSDepTime=u'730', ArrTime=u'918', CRSArrTime=u'849', UniqueCarrier=u'PS', FlightNum=u'1451', TailNum=u'NA', ActualElapsedTime=u'97', CRSElapsedTime=u'79', AirTime=u'NA', ArrDelay=u'29', DepDelay=u'11', Origin=u'SAN', Dest=u'SFO', Distance=u'447', TaxiIn=u'NA', TaxiOut=u'NA', Cancelled=u'0', CancellationCode=u'NA', Diverted=u'0', CarrierDelay=u'NA', WeatherDelay=u'NA', NASDelay=u'NA', SecurityDelay=u'NA', LateAircraftDelay=u'NA'), Row(Year=u'1987', Month=u'10', DayofMonth=u'18', DayOfWeek=u'7', DepTime=u'729', CRSDepTime=u'730', ArrTime=u'847', CRSArrTime=u'849', UniqueCarrier=u'PS', FlightNum=u'1451', TailNum=u'NA', ActualElapsedTime=u'78', CRSElapsedTime=u'79', AirTime=u'NA', ArrDelay=u'-2', DepDelay=u'-1', Origin=u'SAN', Dest=u'SFO', Distance=u'447', TaxiIn=u'NA', TaxiOut=u'NA', Cancelled=u'0', CancellationCode=u'NA', Diverted=u'0', CarrierDelay=u'NA', WeatherDelay=u'NA', NASDelay=u'NA', SecurityDelay=u'NA', LateAircraftDelay=u'NA')]\n"}]},"apps":[],"jobName":"paragraph_1592389356092_-373384493","id":"20200612-120940_2108969312","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T16:04:33+0000","dateFinished":"2020-06-17T16:04:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17291"},{"text":"%pyspark\n\nFlightSQL = spark.sql(\"SELECT Year, Month, COUNT(*) FROM scala_flight GROUP BY Year, Month ORDER BY Year, Month DESC\")","user":"anonymous","dateUpdated":"2020-06-17T16:04:39+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1592389356093_-373769242","id":"20200604-111643_1810996699","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T16:04:39+0000","dateFinished":"2020-06-17T16:04:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17292"},{"text":"%pyspark\n\nFlightSQL.show()","user":"anonymous","dateUpdated":"2020-06-17T16:12:22+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+-----+--------+\n|Year|Month|count(1)|\n+----+-----+--------+\n|1987|   12|  440403|\n|1987|   11|  422803|\n|1987|   10|  448620|\n|1988|    9|  424075|\n|1988|    8|  446769|\n|1988|    7|  441118|\n|1988|    6|  431299|\n|1988|    5|  435916|\n|1988|    4|  427325|\n|1988|    3|  445080|\n|1988|    2|  412579|\n|1988|   12|  438454|\n|1988|   11|  420861|\n|1988|   10|  441670|\n|1988|    1|  436950|\n|1989|    9|  415068|\n|1989|    8|  426085|\n|1989|    7|  417166|\n|1989|    6|  406293|\n|1989|    5|  416160|\n+----+-----+--------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1592389356094_-372614996","id":"20200603-143810_181810495","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T16:12:22+0000","dateFinished":"2020-06-17T16:17:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17293"},{"title":"Reading data as CSV in Scala","text":"%spark\n\nval flightDF = spark.read.format(\"csv\").option(\"sep\", \",\").option(\"inferSchema\", \"true\").option(\"header\", \"true\").load(\"file:///downloads/Data/\")","user":"anonymous","dateUpdated":"2020-06-17T16:23:24+0000","config":{"lineNumbers":false,"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nflightDF: org.apache.spark.sql.DataFrame = [Year: int, Month: int ... 27 more fields]\n"}]},"apps":[],"jobName":"paragraph_1592389356095_-372999744","id":"20200605-135049_291488078","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T16:23:24+0000","dateFinished":"2020-06-17T16:27:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17294"},{"title":"Reading data as CSV in PySpark","text":"%pyspark\n\ndf = spark.read.load(\"file:///downloads/Data/\", format=\"csv\", sep=\",\", inferSchema=\"true\", header=\"true\")","dateUpdated":"2020-06-17T10:22:36+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592389356096_-387235454","id":"20200609-113602_942244201","dateCreated":"2020-06-17T10:22:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:17295"},{"text":"%pyspark\n\ndf.head()","dateUpdated":"2020-06-17T10:22:36+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592389356099_-386850705","id":"20200609-114252_1374067139","dateCreated":"2020-06-17T10:22:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:17296"},{"text":"%pyspark\n\ndf.count()","dateUpdated":"2020-06-17T10:22:36+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592389356099_-388774449","id":"20200609-114030_1684479315","dateCreated":"2020-06-17T10:22:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:17297"},{"text":"%pyspark\n\ndf.createOrReplaceTempView(\"pyspark_csv_flight\")\nsqlDF = spark.sql(\"SELECT Year, Month, COUNT(*) FROM pyspark_csv_flight GROUP BY Year, Month\")","dateUpdated":"2020-06-17T11:14:49+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"lineNumbers":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592389356101_-389159198","id":"20200609-113632_1882133307","dateCreated":"2020-06-17T10:22:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:17298"},{"text":"%pyspark\n\nsqlDF.show()","dateUpdated":"2020-06-17T10:22:36+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592389356103_-388389700","id":"20200609-113707_2130635548","dateCreated":"2020-06-17T10:22:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:17299"},{"title":"Query-1: Find all flights whose distance between origin and destination is greater than 1000 miles ","text":"%spark\nspark.sql(\"\"\"SELECT Distance, Origin, Dest \n        FROM scala_flight WHERE Distance > 1000 \n        ORDER BY Distance DESC\"\"\").show(10)\n","user":"anonymous","dateUpdated":"2020-06-18T00:28:10+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false},"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------+------+----+\n|Distance|Origin|Dest|\n+--------+------+----+\n|    4983|   JFK| HNL|\n|    4983|   JFK| HNL|\n|    4983|   JFK| HNL|\n|    4983|   JFK| HNL|\n|    4983|   JFK| HNL|\n|    4983|   JFK| HNL|\n|    4983|   JFK| HNL|\n|    4983|   JFK| HNL|\n|    4983|   HNL| JFK|\n|    4983|   JFK| HNL|\n+--------+------+----+\nonly showing top 10 rows\n\n"}]},"apps":[],"jobName":"paragraph_1592389356110_-391082943","id":"20200610-125224_466389664","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-18T00:24:47+0000","dateFinished":"2020-06-18T00:27:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17304"},{"title":"Query-2: Find all flights with at least 2 hour delays between San Francisco (SFO) and Chicago (ORD)","text":"%spark\nspark.sql(\"\"\"SELECT DayofMonth, ArrDelay, Origin, Dest \n        FROM scala_flight \n        WHERE ArrDelay > 120 AND Origin = 'SFO' AND Dest = 'ORD' \n        ORDER by ArrDelay DESC\"\"\").show(10)\n","user":"anonymous","dateUpdated":"2020-06-18T00:34:07+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","tableHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+--------+------+----+\n|DayofMonth|ArrDelay|Origin|Dest|\n+----------+--------+------+----+\n|        25|     533|   SFO| ORD|\n|         9|     492|   SFO| ORD|\n|         2|     470|   SFO| ORD|\n|        29|     460|   SFO| ORD|\n|        12|     458|   SFO| ORD|\n|         1|     386|   SFO| ORD|\n|         7|     363|   SFO| ORD|\n|        12|     362|   SFO| ORD|\n|         5|     357|   SFO| ORD|\n|        25|     353|   SFO| ORD|\n+----------+--------+------+----+\nonly showing top 10 rows\n\n"}]},"apps":[],"jobName":"paragraph_1592404689687_2089796137","id":"20200617-143809_2125013098","dateCreated":"2020-06-17T14:38:09+0000","dateStarted":"2020-06-18T00:34:07+0000","dateFinished":"2020-06-18T00:36:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17305"},{"title":"Query-3: A more complicated query in SQL: let’s label all US flights with a human readable label: Very Long Delay (> 6 hours), Lon g Delay (2 - 6 hours), etc. in a new column called “Flight_Delays”","text":"%spark\nspark.sql(\"\"\"SELECT ArrDelay, Origin, Dest,\n         CASE\n         WHEN ArrDelay > 360 THEN 'Very Long Delays'\n         WHEN ArrDelay > 120 AND ArrDelay < 360 THEN 'Long Delays'\n         WHEN ArrDelay > 60 AND ArrDelay < 120 THEN 'Short Delays'\n         WHEN ArrDelay > 0 and ArrDelay < 60 THEN 'Tolerable Delays'\n         WHEN ArrDelay = 0 THEN 'No Delays'\n         ELSE 'Early'\n         END AS Flight_Delays\n         FROM scala_flight\n         ORDER BY Origin, ArrDelay DESC\"\"\").show(10)\n","user":"anonymous","dateUpdated":"2020-06-18T00:48:20+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------+------+----+-------------+\n|ArrDelay|Origin|Dest|Flight_Delays|\n+--------+------+----+-------------+\n|      NA|   ABE| ORD|        Early|\n|      NA|   ABE| ORD|        Early|\n|      NA|   ABE| ORD|        Early|\n|      NA|   ABE| ORD|        Early|\n|      NA|   ABE| MDT|        Early|\n|      NA|   ABE| ORD|        Early|\n|      NA|   ABE| PIT|        Early|\n|      NA|   ABE| DTW|        Early|\n|      NA|   ABE| AVP|        Early|\n|      NA|   ABE| ORD|        Early|\n+--------+------+----+-------------+\nonly showing top 10 rows\n\n"}]},"apps":[],"jobName":"paragraph_1592440392717_1093206938","id":"20200618-003312_1204740666","dateCreated":"2020-06-18T00:33:12+0000","dateStarted":"2020-06-18T00:48:20+0000","dateFinished":"2020-06-18T00:51:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17306"},{"title":"we display the average departure delay by carrier","text":"%sql select UniqueCarrier, avg(DepDelay)\n from scala_flight\n group by UniqueCarrier\n","user":"anonymous","dateUpdated":"2020-06-18T01:05:26+0000","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"UniqueCarrier\tavg(CAST(DepDelay AS DOUBLE))\nUA\t8.522036416468469\nEA\t8.674050565435543\nPI\t9.560336027984606\nPS\t8.928103703344409\nAA\t6.39447728516694\nNW\t5.000409532950473\nUniqueCarrier\tnull\nHP\t6.720184815048205\nTW\t7.436345158479354\nDL\t7.586318199389335\nUS\t7.376811309336861\nML (1)\t6.229676674364896\nAS\t5.90871863394713\nCO\t7.420249361301295\nPA (1)\t5.532442442890681\nWN\t7.158599712911095\n"}]},"apps":[],"jobName":"paragraph_1592440685736_-1453817101","id":"20200618-003805_1769915297","dateCreated":"2020-06-18T00:38:05+0000","dateStarted":"2020-06-18T00:54:04+0000","dateFinished":"2020-06-18T00:59:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17308"},{"text":"%sql\nselect UniqueCarrier, count(DepDelay)\nfrom scala_flight where DepDelay > 40\ngroup by UniqueCarrier\n","user":"anonymous","dateUpdated":"2020-06-18T01:08:09+0000","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"UniqueCarrier\tcount(DepDelay)\nUA\t363699\nEA\t56567\nPI\t42366\nPS\t5754\nAA\t311268\nNW\t186319\nHP\t71348\nTW\t124147\nDL\t310068\nUS\t315728\nML (1)\t2661\nAS\t34455\nCO\t219187\nPA (1)\t13154\nWN\t175403\n"}]},"apps":[],"jobName":"paragraph_1592441644623_428189507","id":"20200618-005404_725343318","dateCreated":"2020-06-18T00:54:04+0000","dateStarted":"2020-06-18T01:01:53+0000","dateFinished":"2020-06-18T01:07:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17309"},{"text":"%sql\r\nselect Origin, Dest, count(DepDelay)\r\nfrom scala_flight where DepDelay > 40\r\ngroup by Origin, Dest\r\nORDER BY count(DepDelay) desc","user":"anonymous","dateUpdated":"2020-06-18T10:17:26+0000","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592474932137_-162888555","id":"20200618-100852_801372377","dateCreated":"2020-06-18T10:08:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:20182","dateFinished":"2020-06-18T10:15:33+0000","dateStarted":"2020-06-18T10:10:26+0000","title":"The count of departure delays by origin and destination","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Origin\tDest\tcount(DepDelay)\nLAX\tSFO\t12931\nSFO\tLAX\t10441\nEWR\tORD\t7053\nPHX\tLAX\t6663\nLAX\tPHX\t6330\nSAN\tSFO\t6116\nORD\tEWR\t5931\nBOS\tEWR\t5704\nSFO\tSAN\t5625\nPHX\tSFO\t5564\nMSP\tORD\t5544\nSEA\tSFO\t5520\nEWR\tBOS\t5398\nLAS\tLAX\t5361\nSFO\tSEA\t5296\nORD\tMSP\t5293\nLAX\tLAS\t5146\nATL\tORD\t5064\nORD\tLAX\t5028\nDEN\tORD\t4886\nORD\tLGA\t4699\nBOS\tORD\t4688\nORD\tSFO\t4619\nORD\tDEN\t4599\nORD\tBOS\t4576\nATL\tEWR\t4466\nORD\tATL\t4430\nDEN\tSFO\t4387\nLGA\tORD\t4348\nPHX\tLAS\t4309\nDFW\tIAH\t4130\nLAX\tORD\t4083\nDFW\tDEN\t4068\nBOS\tDCA\t4012\nORD\tDTW\t3957\nPDX\tSFO\t3938\nSFO\tPHX\t3887\nIAH\tDFW\t3867\nDFW\tORD\t3866\nBOS\tPHL\t3864\nORD\tSTL\t3801\nDEN\tDFW\t3779\nDCA\tBOS\t3774\nORD\tDFW\t3773\nLAX\tOAK\t3711\nEWR\tATL\t3692\nHOU\tDAL\t3683\nDTW\tORD\t3661\nDFW\tATL\t3654\nLAS\tPHX\t3625\nDFW\tLAX\t3613\nORD\tPHL\t3604\nSFO\tORD\t3592\nSFO\tPDX\t3556\nDFW\tSFO\t3544\nLAS\tSFO\t3502\nATL\tDFW\t3465\nLAX\tHNL\t3464\nPHX\tSAN\t3450\nJFK\tLAX\t3438\nORD\tSEA\t3429\nSTL\tORD\t3411\nORD\tDCA\t3410\nPHL\tBOS\t3388\nDEN\tLAX\t3366\nDAL\tHOU\t3333\nSFO\tLAS\t3251\nDEN\tSLC\t3219\nATL\tLGA\t3191\nDFW\tSAT\t3177\nDTW\tEWR\t3162\nBUR\tSFO\t3158\nSAN\tPHX\t3137\nDCA\tORD\t3102\nMIA\tEWR\t3101\nIAH\tORD\t3091\nSFO\tDEN\t3073\nORD\tPHX\t3054\nSNA\tSFO\t3035\nDFW\tAUS\t3022\nMCO\tEWR\t3005\nPHL\tORD\t2994\nMDW\tSTL\t2968\nATL\tMCO\t2961\nORD\tIAH\t2960\nOAK\tLAX\t2955\nSEA\tPDX\t2889\nORD\tPIT\t2864\nSTL\tMDW\t2861\nMIA\tLGA\t2849\nEWR\tMCO\t2842\nSFO\tBUR\t2834\nATL\tBOS\t2812\nPHX\tORD\t2809\nPHX\tDEN\t2796\nEWR\tDTW\t2769\nATL\tMIA\t2767\nDFW\tPHX\t2749\nSTL\tMCI\t2747\nLAX\tDEN\t2743\nDFW\tEWR\t2728\nSEA\tANC\t2718\nLAX\tJFK\t2708\nDFW\tLGA\t2676\nLAX\tSEA\t2674\nORD\tLAS\t2668\nEWR\tPIT\t2644\nDEN\tPHX\t2622\nSEA\tLAX\t2606\nPHX\tONT\t2560\nMIA\tJFK\t2559\nORD\tCLE\t2559\nORD\tBWI\t2534\nORD\tBDL\t2528\nEWR\tMIA\t2490\nSAT\tDFW\t2490\nJFK\tSFO\t2490\nDFW\tLAS\t2488\nEWR\tDEN\t2486\nLGA\tATL\t2486\nPIT\tORD\t2485\nATL\tPHL\t2484\nONT\tSFO\t2481\nORD\tCVG\t2474\nATL\tTPA\t2455\nORD\tSAN\t2449\nLAX\tDFW\t2446\nDEN\tEWR\t2428\nORD\tMCI\t2424\nSFO\tDFW\t2424\nDEN\tSEA\t2416\nSFO\tONT\t2415\nHNL\tLAX\t2411\nSLC\tSFO\t2408\nPHL\tATL\t2382\nSFO\tHNL\t2377\nSLC\tDEN\t2365\nIAH\tSFO\t2359\nBWI\tORD\t2346\nMSP\tDEN\t2318\nFLL\tEWR\t2316\nLGA\tMIA\t2315\nDEN\tMSP\t2314\nAUS\tDFW\t2304\nDFW\tBOS\t2299\nDTW\tBOS\t2294\nMIA\tORD\t2291\nDFW\tSTL\t2286\nBUF\tEWR\t2261\nDFW\tSAN\t2260\nCLE\tORD\t2256\nSAN\tLAX\t2253\nSTL\tHOU\t2252\nATL\tSTL\t2251\nDTW\tMSP\t2241\nDFW\tMIA\t2235\nCLT\tEWR\t2232\nDTW\tSTL\t2226\nEWR\tBUF\t2225\nSEA\tORD\t2224\nMIA\tATL\t2220\nPIT\tEWR\t2216\nCLT\tORD\t2210\nCVG\tORD\t2183\nDFW\tOKC\t2169\nDFW\tELP\t2169\nSTL\tPHX\t2166\nDTW\tLGA\t2154\nATL\tJAX\t2134\nSFO\tSNA\t2132\nEWR\tDCA\t2132\nLAX\tSMF\t2120\nORD\tBUF\t2115\nDFW\tABQ\t2113\nCLT\tLGA\t2106\nPBI\tLGA\t2104\nIAH\tDEN\t2103\nATL\tFLL\t2098\nLAX\tSAN\t2090\nDFW\tTUL\t2089\nDTW\tMDW\t2083\nJFK\tMIA\t2080\nJFK\tSJU\t2079\nHOU\tMSY\t2065\nMCI\tSTL\t2060\nSTL\tDEN\t2058\nDTW\tATL\t2058\nLGA\tDFW\t2057\nMCO\tLGA\t2055\nLAS\tORD\t2053\nSTL\tDTW\t2051\nEWR\tCLE\t2047\nEWR\tDFW\t2040\nDEN\tLAS\t2039\nSTL\tDFW\t2038\nDFW\tBNA\t2037\nDEN\tIAH\t2027\nMSP\tDTW\t2026\nPHX\tABQ\t2018\nSLC\tORD\t2017\nMDW\tDTW\t2013\nORD\tCMH\t2012\nLGA\tFLL\t2004\nORD\tMIA\t1997\nEWR\tLAX\t1994\nORD\tPDX\t1993\nEWR\tFLL\t1992\nSEA\tDEN\t1990\nFLL\tLGA\t1988\nEWR\tCMH\t1987\nMIA\tDFW\t1982\nORD\tIND\t1977\nCLT\tATL\t1972\nMSP\tSFO\t1971\nATL\tLAX\t1969\nBOS\tATL\t1964\nPHX\tDFW\t1959\nORD\tROC\t1949\nIAH\tLAX\t1949\nSJU\tJFK\t1946\nMCO\tMIA\t1937\nORD\tOMA\t1935\nSFO\tJFK\t1933\nDFW\tMCO\t1930\nPDX\tSEA\t1925\nDFW\tMSY\t1921\nIAH\tEWR\t1914\nDFW\tSEA\t1907\nATL\tDCA\t1904\nCLE\tEWR\t1900\nSTL\tSFO\t1899\nANC\tSEA\t1899\nBOS\tBWI\t1894\nPHX\tTUS\t1886\nBOS\tDFW\t1882\nORD\tGRR\t1880\nCMH\tEWR\t1880\nDFW\tDCA\t1871\nDEN\tSAN\t1870\nLGA\tPIT\t1867\nORD\tSLC\t1865\nMIA\tBOS\t1861\nATL\tDTW\t1861\nEWR\tIAH\t1859\nMSP\tEWR\t1856\nORD\tMCO\t1853\nHOU\tSTL\t1843\nPBI\tEWR\t1833\nDEN\tSTL\t1832\nMCO\tBOS\t1828\nPIT\tPHL\t1825\nPHL\tPIT\t1821\nHOU\tDFW\t1818\nLGA\tCLT\t1814\nLAS\tSAN\t1810\nTPA\tEWR\t1808\nORD\tDSM\t1789\nBWI\tBOS\t1778\nHOU\tSAT\t1777\nMCO\tORD\t1772\nLAX\tSJC\t1758\nSLC\tLAX\t1755\nBDL\tORD\t1754\nMSY\tDFW\t1749\nDFW\tPHL\t1749\nDFW\tHOU\t1748\nBOS\tPIT\t1747\nLGA\tMCO\t1743\nLGA\tPBI\t1742\nMIA\tMCO\t1737\nSTL\tEWR\t1735\nORD\tSJC\t1733\nSMF\tLAX\t1732\nDFW\tTPA\t1732\nATL\tDEN\t1727\nDFW\tSJC\t1726\nEWR\tPBI\t1722\nMCI\tORD\t1719\nSTL\tATL\t1718\nDFW\tMCI\t1708\nDEN\tABQ\t1708\nMSP\tBOS\t1702\nEWR\tTPA\t1701\nORD\tALB\t1700\nORD\tRDU\t1700\nORD\tBNA\t1680\nSTL\tLAX\t1672\nATL\tPIT\t1670\nORD\tCLT\t1663\nCVG\tEWR\t1662\nATL\tIAH\t1662\nLGA\tDTW\t1660\nPHX\tSTL\t1659\nMCO\tATL\t1657\nDFW\tSLC\t1656\nORD\tSYR\t1651\nDTW\tPHL\t1647\nORD\tONT\t1640\nDEN\tCOS\t1639\nSTL\tIND\t1637\nCLE\tLGA\t1631\nSAN\tLAS\t1630\nDFW\tSNA\t1626\nDCA\tATL\t1623\nATL\tMSY\t1618\nDTW\tMKE\t1610\nIAH\tATL\t1607\nBNA\tDFW\t1607\nJFK\tBOS\t1605\nSFO\tIAH\t1604\nLAS\tDEN\t1602\nONT\tPHX\t1600\nMEM\tORD\t1598\nORD\tPVD\t1589\nABQ\tPHX\t1582\nATL\tSFO\t1581\nIAD\tBOS\t1578\nSFO\tSLC\t1577\nORD\tMDT\t1576\nSJC\tLAX\t1574\nPIT\tLGA\t1573\nATL\tCLT\t1570\nCLT\tBOS\t1570\nANC\tFAI\t1567\nDEN\tPDX\t1565\nMCO\tPHL\t1565\nMSP\tSTL\t1562\nDFW\tTUS\t1562\nIAH\tMSY\t1560\nDFW\tONT\t1558\nMSY\tHOU\t1557\nBOS\tDTW\t1557\nDFW\tDTW\t1556\nORD\tIAD\t1552\nOMA\tORD\t1550\nRDU\tORD\t1548\nDFW\tMEM\t1547\nDCA\tDFW\t1547\nPHL\tMCO\t1545\nIAH\tSAT\t1544\nLAX\tSLC\t1544\nEWR\tCLT\t1543\nLAS\tDFW\t1542\nMSP\tLAX\t1541\nPIT\tBOS\t1541\nDTW\tDFW\t1540\nATL\tPBI\t1533\nEWR\tORF\t1523\nDEN\tIAD\t1521\nORD\tMKE\t1519\nORD\tSNA\t1512\nPHX\tELP\t1510\nCLE\tBOS\t1506\nLAX\tEWR\t1505\nCLT\tPHL\t1505\nMSP\tPHX\t1495\nSTL\tMSP\t1492\nSAN\tDFW\t1492\nBOS\tIAD\t1490\nBNA\tORD\t1487\nDTW\tDCA\t1484\nIND\tORD\t1482\nSTL\tLIT\t1481\nFLL\tATL\t1476\nPDX\tLAX\t1475\nDEN\tLGA\t1474\nMDW\tMCI\t1474\nORD\tDAY\t1472\nIAD\tLAX\t1470\nROC\tORD\t1468\nLAX\tPDX\t1467\nMEM\tATL\t1466\nDTW\tLAX\t1465\nMSP\tDFW\t1463\nATL\tRDU\t1462\nDTW\tSFO\t1459\nBUF\tORD\t1454\nDCA\tSTL\t1453\nMEM\tDFW\t1452\nSAT\tHOU\t1447\nMIA\tSJU\t1443\nDEN\tMCI\t1442\nSTL\tTUL\t1442\nORD\tMSY\t1441\nATL\tCAE\t1441\nDTW\tPIT\t1440\nSJC\tORD\t1436\nTPA\tATL\t1436\nDFW\tMSP\t1435\nBOS\tMCO\t1431\nLGA\tBUF\t1431\nMCI\tMDW\t1429\nATL\tMEM\t1427\nDFW\tRDU\t1424\nSTL\tOKC\t1423\nMCI\tDFW\t1418\nORD\tMEM\t1417\nORF\tEWR\t1415\nLGA\tCLE\t1410\nPHL\tCLT\t1405\nJFK\tORD\t1400\nCLT\tMCO\t1398\nATL\tBWI\t1394\nMSP\tSEA\t1394\nEWR\tGSO\t1390\nDTW\tMCO\t1388\nSAN\tORD\t1388\nBUF\tLGA\t1386\nEWR\tSFO\t1385\nATL\tBHM\t1385\nIAH\tLGA\t1382\nMSP\tLGA\t1381\nDCA\tEWR\t1381\nIND\tSTL\t1380\nBUR\tOAK\t1380\nDEN\tBOS\t1375\nDTW\tDEN\t1375\nMCI\tDEN\t1375\nHNL\tSFO\t1368\nBOS\tCLT\t1364\nHOU\tAUS\t1358\nBWI\tATL\t1356\nOKC\tDFW\t1355\nDFW\tLIT\t1354\nATL\tCHS\t1351\nMSY\tIAH\t1351\nPHL\tDFW\t1347\nEWR\tSTL\t1347\nCMH\tORD\t1345\nBOS\tLGA\t1343\nBOS\tDEN\t1337\nGSO\tEWR\t1334\nABQ\tDFW\t1332\nOAK\tBUR\t1330\nCLE\tSTL\t1329\nDEN\tOMA\t1329\nBOS\tCLE\t1329\nTUL\tDFW\t1323\nSAT\tDAL\t1320\nPHL\tDTW\t1318\nDFW\tSMF\t1313\nLGA\tMSP\t1311\nORD\tSMF\t1310\nJAX\tATL\t1304\nGRR\tORD\t1302\nBOS\tJFK\t1302\nLGA\tTPA\t1299\nJFK\tDCA\t1296\nCLT\tTPA\t1295\nDEN\tDTW\t1295\nEWR\tMSP\t1293\nSTL\tBOS\t1288\nORD\tSAT\t1287\nIAH\tAUS\t1287\nDFW\tPDX\t1285\nABQ\tDEN\t1284\nORD\tAUS\t1283\nSFO\tEWR\t1282\nDEN\tONT\t1280\nMSP\tSLC\t1278\nSLC\tDFW\t1278\nATL\tBNA\t1278\nPIT\tSTL\t1276\nDEN\tSJC\t1273\nORD\tTUL\t1273\nDEN\tATL\t1272\nTPA\tLGA\t1266\nRDU\tEWR\t1265\nJFK\tATL\t1263\nGSO\tATL\t1259\nSAN\tSMF\t1258\nDFW\tSHV\t1256\nSNA\tORD\t1256\nSTL\tSLC\t1254\nPDX\tORD\t1254\nATL\tRSW\t1252\nMCO\tJFK\t1243\nORD\tTPA\t1242\nDTW\tGRR\t1233\nSBA\tSFO\t1233\nDFW\tFLL\t1231\nDSM\tORD\t1230\nMCO\tDFW\t1230\nDFW\tCLT\t1227\nDFW\tIAD\t1226\nLGA\tDEN\t1225\nORD\tOKC\t1222\nIAD\tDEN\t1222\nCLT\tGSO\t1221\nEUG\tSFO\t1220\nMFR\tSFO\t1218\nLIT\tSTL\t1216\nSFO\tEUG\t1216\nPIT\tSFO\t1215\nALB\tORD\t1213\nCLT\tDFW\t1210\nDEN\tSMF\t1210\nELP\tDFW\t1208\nTPA\tFLL\t1197\nJFK\tPHX\t1197\nAUS\tDAL\t1197\nGEG\tSFO\t1193\nSAN\tOAK\t1191\nJFK\tMCO\t1189\nONT\tORD\t1185\nMIA\tPHL\t1182\nSNA\tDFW\t1181\nBOS\tSTL\t1175\nIAD\tORD\t1172\nDAL\tSAT\t1170\nPIT\tATL\t1167\nSFO\tRNO\t1163\nSTL\tDCA\t1162\nELP\tPHX\t1161\nIAD\tSFO\t1161\nDAL\tAUS\t1160\nSTL\tLGA\t1158\nCLE\tBWI\t1155\nSTL\tCLE\t1152\nOAK\tONT\t1150\nOMA\tDEN\t1143\nBWI\tCLE\t1141\nRDU\tATL\t1137\nJFK\tSTL\t1133\nATL\tSLC\t1133\nLAS\tRNO\t1132\nATL\tGSP\t1132\nSAN\tDEN\t1131\nPIT\tDTW\t1125\nBHM\tATL\t1125\nPHL\tFLL\t1124\nMCI\tPHX\t1122\nCLT\tDCA\t1122\nCOS\tDEN\t1122\nMSY\tATL\t1121\nATL\tSAV\t1120\nEWR\tCVG\t1116\nLIT\tDFW\t1114\nPIT\tLAX\t1114\nMSY\tORD\t1112\nDTW\tCLE\t1110\nCLE\tMDW\t1110\nSMF\tORD\t1107\nOAK\tSEA\t1107\nSEA\tOAK\t1105\nATL\tMCI\t1105\nSFO\tMFR\t1104\nLAS\tBUR\t1103\nDFW\tPIT\t1101\nPHL\tMIA\t1101\nIAD\tDFW\t1100\nCAE\tATL\t1098\nSFO\tGEG\t1094\nATL\tSDF\t1093\nCHS\tATL\t1092\nONT\tOAK\t1088\nSEA\tDFW\t1088\nCLT\tRDU\t1086\nCLE\tPHL\t1086\nRSW\tEWR\t1085\nDFW\tCOS\t1083\nATL\tMSP\t1083\nATL\tGSO\t1081\nMSP\tMKE\t1080\nDEN\tPHL\t1080\nSJC\tDFW\t1078\nMDT\tORD\t1076\nTPA\tMIA\t1076\nMOB\tATL\t1076\nBOS\tMIA\t1075\nDTW\tTPA\t1073\nSYR\tORD\t1071\nCLT\tMIA\t1069\nATL\tPHX\t1069\nSTL\tABQ\t1066\nSLC\tPHX\t1065\nPDX\tDEN\t1065\nPHL\tTPA\t1065\nTUS\tPHX\t1064\nPIT\tCLT\t1060\nBOS\tLAX\t1059\nCLT\tCAE\t1056\nBOS\tMSP\t1055\nSLC\tSEA\t1054\nDFW\tBWI\t1054\nPHX\tMSP\t1053\nDAL\tLIT\t1051\nMIA\tDCA\t1050\nSFO\tMSP\t1049\nATL\tCLE\t1048\nATL\tIAD\t1047\nSFO\tBOI\t1047\nCLT\tBWI\t1046\nJFK\tPIT\t1046\nPHL\tSTL\t1045\nDCA\tMIA\t1043\nATL\tCMH\t1043\nJFK\tDTW\t1042\nABQ\tLAX\t1040\nHOU\tHRL\t1039\nATL\tSJU\t1039\nRNO\tSFO\t1038\nMDW\tCLE\t1035\nCMH\tMDW\t1034\nCVG\tLGA\t1033\nSJC\tDEN\t1033\nLGA\tSTL\t1032\nJFK\tDFW\t1031\nSJU\tMIA\t1030\nROC\tEWR\t1027\nDEN\tTUS\t1026\nAUS\tHOU\t1023\nDAY\tORD\t1021\nEWR\tJAX\t1021\nTPA\tORD\t1021\nBOS\tSFO\t1019\nDTW\tIND\t1018\nCLT\tJAX\t1018\nLAX\tABQ\t1017\nDEN\tOAK\t1017\nTPA\tDFW\t1016\nBWI\tSTL\t1016\nSTL\tBWI\t1014\nSTL\tSDF\t1013\nDAL\tLBB\t1012\nDEN\tOKC\t1008\nPIT\tMCO\t1007\nEWR\tRDU\t1006\nDTW\tSEA\t1005\nLGA\tBOS\t1004\nSTL\tLAS\t1004\nATL\tCVG\t1003\nDEN\tCLE\t1003\nONT\tDFW\t1003\nBWI\tEWR\t1002\nFLL\tBOS\t1001\nCMH\tBOS\t1000\nLGA\tROC\t999\nMIA\tTPA\t999\nORD\tOAK\t997\nLAX\tIAH\t995\nLAS\tSLC\t995\nDEN\tRNO\t992\nSAV\tATL\t990\nORD\tHPN\t990\nDFW\tIND\t987\nPHL\tPBI\t987\nMEM\tLIT\t986\nSLC\tLAS\t985\nCLT\tPIT\t984\nIAD\tATL\t984\nDFW\tBTR\t980\nCVG\tATL\t979\nPIT\tDFW\t979\nLAX\tELP\t979\nCLT\tCHS\t977\nSMF\tSAN\t976\nDTW\tBUF\t975\nPIT\tDEN\t975\nRDU\tCLT\t973\nDTW\tMBS\t973\nPIT\tBWI\t973\nRDU\tDFW\t972\nTUL\tORD\t969\nDFW\tRNO\t968\nLAX\tTUS\t968\nLAX\tATL\t967\nDFW\tOAK\t964\nJFK\tTPA\t964\nCMH\tLAS\t963\nBNA\tATL\t962\nCLT\tORF\t962\nDTW\tPHX\t962\nSFO\tSBA\t962\nRDU\tLGA\t962\nSTL\tCMH\t961\nEWR\tBWI\t959\nDFW\tAMA\t959\nPHX\tSLC\t958\nEWR\tPHX\t955\nCLE\tDEN\t955\nDEN\tSNA\t949\nCLT\tSTL\t949\nPHL\tCLE\t948\nIAH\tBOS\t948\nMIA\tIAH\t946\nMDW\tBNA\t945\nEWR\tROC\t945\nGEG\tSEA\t945\nHOU\tCRP\t945\nPIT\tDCA\t945\nDCA\tCLT\t944\nATL\tSRQ\t944\nATL\tDAB\t943\nSTL\tSEA\t943\nFLL\tTPA\t943\nLGA\tGSO\t942\nMSP\tDCA\t942\nTUS\tDFW\t941\nROC\tLGA\t941\nPHL\tLAX\t938\nBOI\tSFO\t937\nTUS\tLAX\t935\nIAH\tMIA\t934\nATL\tJFK\t933\nJAX\tEWR\t932\nSTL\tPHL\t932\nEWR\tSJU\t931\nCLT\tFAY\t930\nLAX\tIAD\t929\nIAH\tPHX\t926\nLGA\tCMH\t924\nPVD\tORD\t921\nCLT\tRIC\t920\nMCO\tDTW\t920\nTUL\tSTL\t919\nATL\tTYS\t919\nPHL\tBDL\t916\nCLT\tGSP\t915\nLGA\tORF\t914\nATL\tMOB\t913\nMDW\tCMH\t912\nSLC\tSTL\t910\nATL\tPNS\t905\nEWR\tRSW\t905\nMCO\tFLL\t903\nOKC\tORD\t903\nSTL\tOMA\t902\nCMH\tLGA\t901\nRNO\tLAS\t897\nBNA\tHOU\t896\nOKC\tSTL\t896\nEWR\tIND\t895\nFAI\tANC\t894\nLBB\tDAL\t893\nCLT\tFLL\t891\nMSP\tLAS\t890\nDTW\tBWI\t889\nGSO\tLGA\t889\nDFW\tCLE\t886\nLGA\tSYR\t883\nOAK\tSAN\t883\nDTW\tMEM\t882\nFLL\tDFW\t879\nDTW\tBNA\t877\nCLT\tMYR\t877\nPHL\tROC\t876\nMSP\tATL\t875\nRIC\tEWR\t874\nLAX\tBOS\t874\nELP\tLAX\t874\nBOS\tTPA\t874\nORD\tABE\t872\nDCA\tJFK\t871\nORD\tMSN\t871\nFLL\tPHL\t870\nDFW\tCVG\t869\nDEN\tICT\t869\nRSW\tSRQ\t869\nPHL\tDEN\t867\nATL\tRIC\t867\nSLC\tPDX\t867\nSFO\tATL\t865\nLGA\tIAH\t865\nONT\tDEN\t865\nPBI\tATL\t863\nPHX\tMCI\t862\nDFW\tSDF\t862\nLAX\tSTL\t859\nCVG\tPHL\t858\nPHX\tSAT\t858\nTPA\tBOS\t857\nDAL\tTUL\t856\nSTL\tSAN\t856\nSFO\tSTL\t855\nMSP\tPHL\t855\nMCO\tSTL\t853\nSTL\tPIT\t850\nEWR\tSYR\t850\nMKE\tORD\t850\nDTW\tMIA\t849\nSMF\tSEA\t848\nIND\tEWR\t846\nPHX\tEWR\t845\nATL\tHSV\t844\nMEM\tMSP\t844\nBWI\tMCO\t843\nPHX\tBUR\t839\nMCI\tATL\t838\nSDF\tSTL\t838\nSTL\tTPA\t838\nBOS\tROC\t836\nOKC\tDEN\t834\nATL\tTLH\t834\nTPA\tJFK\t831\nSEA\tMSP\t831\nPNS\tATL\t831\nSAT\tIAH\t830\nBWI\tPIT\t830\nTPA\tPHL\t829\nCVG\tBOS\t828\nORD\tRIC\t826\nSMF\tDFW\t826\nBNA\tBHM\t824\nDFW\tLBB\t823\nSTL\tMCO\t823\nPHX\tOAK\t822\nSJU\tATL\t822\nMIA\tLAX\t822\nSLC\tATL\t821\nBWI\tDTW\t820\nBWI\tCLT\t819\nTPA\tCLT\t819\nPHX\tHOU\t819\nPHL\tBUF\t818\nATL\tBDL\t818\nORD\tTUS\t816\nCLE\tATL\t816\nMSP\tFAR\t815\nAUS\tORD\t815\nLGA\tBWI\t815\nBUR\tLAS\t814\nDCA\tDTW\t814\nSHV\tDFW\t813\nMCO\tCLT\t812\nCLT\tDTW\t811\nIAD\tLGA\t811\nDTW\tLAS\t810\nSAT\tORD\t810\nIAH\tSTL\t810\nORD\tGSO\t810\nDCA\tMSP\t808\nPHX\tSNA\t807\nPIT\tCLE\t806\nMSP\tMDW\t805\nDTW\tIAD\t804\nCMH\tSTL\t804\nORD\tSDF\t803\nDEN\tBOI\t803\nBWI\tLGA\t803\nORD\tMBS\t800\nDFW\tHSV\t799\nSEA\tGEG\t799\nMSP\tMEM\t798\nSFO\tLGB\t797\nBTR\tDFW\t797\nJAN\tDFW\t795\nEWR\tMSY\t795\nDTW\tCVG\t793\nCLT\tAVL\t792\nFLL\tJFK\t791\nATL\tAGS\t791\nMCO\tPIT\t791\nLGB\tSFO\t790\nMCO\tBWI\t788\nCOS\tDFW\t787\nMSY\tEWR\t787\nCLE\tDCA\t786\nDEN\tBIL\t785\nLAS\tABQ\t784\nSMF\tDEN\t783\nCRP\tHOU\t782\nMCI\tTUL\t781\nGSO\tCLT\t781\nDAL\tMAF\t777\nDEN\tTUL\t777\nCLT\tROA\t777\nONT\tSMF\t776\nPHL\tSYR\t776\nGSP\tATL\t775\nDFW\tBHM\t774\nMCO\tPBI\t773\nSTL\tJFK\t773\nDEN\tGEG\t770\nMRY\tSFO\t768\nSMF\tONT\t767\nSFO\tDTW\t766\nPDX\tDFW\t766\nSDF\tATL\t766\nLAX\tMSP\t765\nABQ\tLAS\t764\nDFW\tOMA\t763\nCVG\tDTW\t763\nORD\tJFK\t763\nEWR\tRIC\t763\nDCA\tPIT\t762\nDCA\tCMH\t762\nCLT\tSAV\t762\nDFW\tHRL\t761\nLIT\tDAL\t761\nSAN\tSJC\t759\nSYR\tEWR\t759\nEWR\tLAS\t758\nBNA\tDTW\t758\nKTN\tSEA\t758\nPIT\tMCI\t756\nCLT\tILM\t754\nDTW\tCLT\t754\nBDL\tPHL\t753\nDAL\tIAH\t753\nDTW\tBDL\t753\nDTW\tMSN\t753\nPHL\tCVG\t752\nBOS\tIAH\t752\nPHX\tSJC\t750\nROC\tBOS\t747\nPHL\tORF\t746\nHPN\tORD\t745\nSJU\tEWR\t744\nIND\tDTW\t744\nPHL\tRDU\t743\nPIT\tCVG\t742\nDAB\tATL\t742\nPIT\tCMH\t742\nOAK\tORD\t741\nLGA\tRDU\t741\nDAL\tAMA\t741\nPHL\tPVD\t740\nRDU\tPHL\t739\nDFW\tCRP\t738\nIAH\tPHL\t738\nMCO\tDCA\t738\nABE\tORD\t738\nDCA\tMCO\t737\nATL\tORF\t737\nBOS\tPWM\t736\nPIT\tTPA\t735\nEWR\tMCI\t735\nDTW\tCMH\t735\nSFO\tBOS\t735\nSTL\tDSM\t734\nMCI\tEWR\t732\nBNA\tEWR\t732\nDEN\tMCO\t731\nDAY\tEWR\t731\nATL\tMLB\t731\nORF\tCLT\t730\nORD\tRST\t730\nDEN\tIND\t730\nBWI\tDFW\t730\nSLC\tBOI\t729\nSYR\tLGA\t729\nLAS\tSTL\t728\nEWR\tPWM\t728\nPHX\tIAH\t728\nLAS\tSEA\t727\nATL\tIND\t727\nLNK\tORD\t726\nORD\tICT\t726\nTPA\tMCO\t726\nHOU\tELP\t725\nBOS\tBUF\t725\nPHL\tALB\t723\nMCI\tSFO\t722\nMCI\tOKC\t722\nMSP\tMSN\t722\nORD\tABQ\t719\nEWR\tDAY\t717\nSEA\tSMF\t717\nICT\tORD\t716\nDEN\tDSM\t716\nPWM\tEWR\t715\nPHX\tJFK\t715\nBNA\tMDW\t714\nABQ\tSFO\t711\nATL\tMGM\t711\nORF\tLGA\t711\nJFK\tDEN\t711\nPHX\tAUS\t711\nHRL\tHOU\t710\nDEN\tMSY\t710\nDFW\tJAN\t709\nHNL\tOGG\t709\nORD\tORF\t708\nDFW\tJAX\t708\nPHL\tCMH\t707\nSEA\tPHX\t706\nDFW\tJFK\t706\nSFO\tMRY\t705\nORF\tORD\t705\nSJC\tSEA\t705\nPIT\tERI\t703\nPHX\tATL\t702\nORF\tATL\t702\nRSW\tATL\t701\nPHX\tSEA\t700\nDTW\tSYR\t700\nMSP\tMCI\t700\nDFW\tPBI\t695\nSEA\tSJC\t695\nSTL\tCLT\t695\nABQ\tELP\t695\nPIT\tIAH\t694\nMDW\tMSP\t694\nORD\tCID\t693\nAUS\tIAH\t693\nEWR\tPVD\t693\nHOU\tTUL\t692\nIAH\tMFE\t692\nDAL\tOKC\t692\n<!--TABLE_COMMENT-->\n<font color=red>Results are limited by 1000.</font>"}]}},{"text":"%r\n\nR.Version()","dateUpdated":"2020-06-17T10:22:36+0000","config":{"colWidth":12,"editorMode":"ace/mode/r","results":{},"enabled":true,"editorSetting":{"language":"r"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592389356105_-390698194","id":"20200612-122650_203717550","dateCreated":"2020-06-17T10:22:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:17300","focus":true},{"text":"%r\n\nsparkR.session()","user":"anonymous","dateUpdated":"2020-06-17T23:57:02+0000","config":{"colWidth":12,"editorMode":"ace/mode/r","results":{},"enabled":true,"editorSetting":{"language":"r"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nJava ref type org.apache.spark.sql.SparkSession id 2 \n\n\n\n"}]},"apps":[],"jobName":"paragraph_1592389356106_-389543947","id":"20200610-124141_1269124031","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T23:57:02+0000","dateFinished":"2020-06-17T23:57:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17301","focus":true},{"title":"Reading Data from Scala to R using SQL","text":"%r\n\ndf <- sql(\"SELECT * FROM scala_flight LIMIT 10000\") # Reading 10000 rows","user":"anonymous","dateUpdated":"2020-06-17T23:57:44+0000","config":{"editorSetting":{"language":"r"},"colWidth":12,"editorMode":"ace/mode/r","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"\n\n\n\n"}]},"apps":[],"jobName":"paragraph_1592389356108_-391852441","id":"20200609-120017_2128890118","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T23:57:45+0000","dateFinished":"2020-06-17T23:57:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17302","focus":true},{"text":"%r\n\nhead(df)","user":"anonymous","dateUpdated":"2020-06-17T23:57:50+0000","config":{"colWidth":12,"editorMode":"ace/mode/r","results":{},"enabled":true,"editorSetting":{"language":"r"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nYear Month DayofMonth DayOfWeek DepTime CRSDepTime ArrTime CRSArrTime\n1 Year Month DayofMonth DayOfWeek DepTime CRSDepTime ArrTime CRSArrTime\n2 1987    10         14         3     741        730     912        849\n3 1987    10         15         4     729        730     903        849\n4 1987    10         17         6     741        730     918        849\n5 1987    10         18         7     729        730     847        849\n6 1987    10         19         1     749        730     922        849\n  UniqueCarrier FlightNum TailNum ActualElapsedTime CRSElapsedTime AirTime\n1 UniqueCarrier FlightNum TailNum ActualElapsedTime CRSElapsedTime AirTime\n2            PS      1451      NA                91             79      NA\n3            PS      1451      NA                94             79      NA\n4            PS      1451      NA                97             79      NA\n5            PS      1451      NA                78             79      NA\n6            PS      1451      NA                93             79      NA\n  ArrDelay DepDelay Origin Dest Distance TaxiIn TaxiOut Cancelled\n1 ArrDelay DepDelay Origin Dest Distance TaxiIn TaxiOut Cancelled\n2       23       11    SAN  SFO      447     NA      NA         0\n3       14       -1    SAN  SFO      447     NA      NA         0\n4       29       11    SAN  SFO      447     NA      NA         0\n5       -2       -1    SAN  SFO      447     NA      NA         0\n6       33       19    SAN  SFO      447     NA      NA         0\n  CancellationCode Diverted CarrierDelay WeatherDelay NASDelay\n1 CancellationCode Diverted CarrierDelay WeatherDelay NASDelay\n2               NA        0           NA           NA       NA\n3               NA        0           NA           NA       NA\n4               NA        0           NA           NA       NA\n5               NA        0           NA           NA       NA\n6               NA        0           NA           NA       NA\n  SecurityDelay LateAircraftDelay\n1 SecurityDelay LateAircraftDelay\n2            NA                NA\n3            NA                NA\n4            NA                NA\n5            NA                NA\n6            NA                NA\n\n\n\n"}]},"apps":[],"jobName":"paragraph_1592389356109_-392237189","id":"20200610-124119_591879561","dateCreated":"2020-06-17T10:22:36+0000","dateStarted":"2020-06-17T23:57:50+0000","dateFinished":"2020-06-17T23:57:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:17303","focus":true},{"text":"\n","user":"anonymous","dateUpdated":"2020-06-18T11:21:10+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1592442113856_-1710774648","id":"20200618-010153_1041995105","dateCreated":"2020-06-18T01:01:53+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:17310","errorMessage":""}],"name":"P2 - Scala RDD vs CSV - Scala, PySpark & R - Setting Schema vs TempView","id":"2FD3YU5SK","angularObjects":{"2FBNJU1C4:shared_process":[],"2FCJH94KG:shared_process":[],"2FCEVVCCR:shared_process":[],"2FASGM8J2:shared_process":[],"2FDXC25GH:shared_process":[],"2FBEJXA5D:shared_process":[],"2FD1M139M:shared_process":[],"2FBETQR5N:shared_process":[],"2FDNP9YD2:shared_process":[],"2FCMSVSSN:shared_process":[],"2FDZ23UWX:shared_process":[],"2FCT97RWY:shared_process":[],"2FA7WWQC6:shared_process":[],"2FAXD78GD:shared_process":[],"2FBE6J6FW:shared_process":[],"2FBT2T73P:shared_process":[],"2FBUHXHHX:shared_process":[],"2FCCN55GZ:shared_process":[],"2FDHDU38R:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}